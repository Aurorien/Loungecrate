name: Cypress tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"

      - name: Set up docker-compose for database
        run: docker-compose up -d
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: Set environment variables
        run: |
          echo "PGURI=${{ secrets.PGURI }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV

      - name: Wait for Database
        run: sleep 15

      - name: Check database container
        run: docker ps

      - name: View database container logs
        run: |
          echo "Current Docker container:"
          docker ps

          echo "Fetching database container ID..."
          DATABASE_CONTAINER_ID=$(docker ps -qf "name=database" | awk 'NR==1{print $1}')

          if [ -z "$DATABASE_CONTAINER_ID" ]; then
            echo "Database container not found"
            exit 1
          fi

          echo "Found database container ID: $DATABASE_CONTAINER_ID"
          docker logs $DATABASE_CONTAINER_ID

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Build backend
        run: npx tsc
        working-directory: ./backend

      - name: Start the backend server
        run: node index.js &
        working-directory: ./backend

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Start the application server
        run: NODE_ENV=test npm run dev &
        working-directory: ./frontend

      - name: Wait for Server
        run: sleep 7

      - name: Run tests
        run: NODE_ENV=test npm run test
        working-directory: ./frontend
